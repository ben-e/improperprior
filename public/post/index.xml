<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Ben Ewing | Improper Prior</title>
    <link>/post/</link>
    <description>Recent content in Posts on Ben Ewing | Improper Prior</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 18 May 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>My TripleByte Data Science Experience</title>
      <link>/post/2020/05/18/my-triplebyte-data-science-experience/</link>
      <pubDate>Mon, 18 May 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/2020/05/18/my-triplebyte-data-science-experience/</guid>
      <description>What is TripleByte? TripleByte aims to simplify the hiring process for candidates and companies by conducting background-blind interviews to certify candidates (seriously, you can get a certificate) based solely on their skills. The TripleByte process is meant to replace every interview except the final round, in theory easing the burden on job-seekers, who need only prepare for a single standardized interview (plus the final round), and speeding up the hiring process for companies.</description>
    </item>
    
    <item>
      <title>Learning SQL</title>
      <link>/post/2020/04/23/learning-sql/</link>
      <pubDate>Thu, 23 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/2020/04/23/learning-sql/</guid>
      <description>I’ve been using the past few weeks to improve my SQL fluency, and I just wanted to share a few quick resources that I’ve found useful. In no particular order:
SQLZoo. The quizzes and questions hit the perfect balance of challenging but not so hard that it breaks my sense of flow.
The sqlite3 package for Python and RSQLite package for R. While one certainly could install and use something like PostgreSQL on their laptop (and it’s definitely a useful tool to learn!</description>
    </item>
    
    <item>
      <title>Using Principal Component Analysis to Estimate Socioeconomic Status</title>
      <link>/post/2020/03/21/using-principal-component-analysis-to-estimate-socioeconomic-status/</link>
      <pubDate>Sat, 21 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/2020/03/21/using-principal-component-analysis-to-estimate-socioeconomic-status/</guid>
      <description>IntroductionPrincipal Component Analysis (PCA) is a dimension reduction technique that is commonly used in the social sciences to build single dimension estimates of socioeconomic status. In this post I will first walk through the intuition and math behind PCA, and then provide a simple example of its use in R to generate a simple asset index.
IntuitionDimension reduction is any process by which we reduce the number of variables in a dataset.</description>
    </item>
    
    <item>
      <title>What is an improper prior?</title>
      <link>/post/2020/03/16/what-is-an-improper-prior/</link>
      <pubDate>Mon, 16 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/2020/03/16/what-is-an-improper-prior/</guid>
      <description>IntroductionSince I’ve purchased improperprior.com it seems prudent that I write a short post explaining improper priors.
Typical Bayesian ProcessIn Bayesian statistics we exploit Bayes’ theorem to learn something about a population parameter. For example, if we have data \(Y\) that follow a Binomial distribution, and we would like to estimate the \(\theta\) parameter, we would compute:
\[P(\theta|Y) = \frac{L(Y|\theta)P(\theta)}{P(Y)}.\]
In this case:
\(P(\theta|Y)\) is the posterior probability, this is what we’d like to estimate.</description>
    </item>
    
    <item>
      <title>Continuous and Binary Dependent Variables</title>
      <link>/post/2020/02/14/continuous-and-binary-dependent-variables/</link>
      <pubDate>Fri, 14 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/2020/02/14/continuous-and-binary-dependent-variables/</guid>
      <description>R Setup# Data manipulationlibrary(dplyr)library(purrr)library(tidyr)# Modelinglibrary(broom)# Plotting and tableslibrary(ggplot2)library(patchwork)library(ggthemes)library(knitr)# R settingstheme_set(theme_tufte() + theme(legend.position = &amp;quot;none&amp;quot;))opts_chunk$set(echo = T, warning = F, message = F, tidy = F,fig.width = 8.5, fig.height = 6)IntroductionIn his 2011 paper “Land tenure and investment incentives: Evidence from West Africa,” James Fenske notes that “studies that use binary investment measures…are also less likely to find a statistically significant effect.</description>
    </item>
    
    <item>
      <title>A Language for Survey Programming</title>
      <link>/post/2020/01/05/a-language-for-survey-programming/</link>
      <pubDate>Sun, 05 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/2020/01/05/a-language-for-survey-programming/</guid>
      <description>What’s wrong with XLSForms?XLSForm defines a very accessible (other than reliance on Excel) standard for programming surveys compatible with OpenDataKit, SurveyCTO, and a myriad of other data collection tools used in low/no connectivity environments. XLSForm’s are dead easy to program, but can produce very complex surveys. However, in my ~5 years of programming XLSForm surveys I’ve encountered a few problems caused by the reliance on Excel for programming:</description>
    </item>
    
    <item>
      <title></title>
      <link>/post/1/01/01/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/post/1/01/01/</guid>
      <description>My TripleByte Data Science Experience/*! jQuery v1.11.3 | (c) 2005, 2015 jQuery Foundation, Inc. | jquery.org/license */!function(a,b){&#34;object&#34;==typeof module&amp;&amp;&#34;object&#34;==typeof module.exports?module.exports=a.document?b(a,!0):function(a){if(!a.document)throw new Error(&#34;jQuery requires a window with a document&#34;);return b(a)}:b(a)}(&#34;undefined&#34;!=typeof window?window:this,function(a,b){var c=[],d=c.slice,e=c.concat,f=c.push,g=c.indexOf,h={},i=h.toString,j=h.hasOwnProperty,k={},l=&#34;1.11.3&#34;,m=function(a,b){return new m.fn.init(a,b)},n=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,o=/^-ms-/,p=/-([\da-z])/gi,q=function(a,b){return b.toUpperCase()};m.fn=m.prototype={jquery:l,constructor:m,selector:&#34;&#34;,length:0,toArray:function(){return d.call(this)},get:function(a){return null!=a?0a?this[a+this.length]:this[a]:d.call(this)},pushStack:function(a){var b=m.merge(this.constructor(),a);return b.prevObject=this,b.context=this.context,b},each:function(a,b){return m.each(this,a,b)},map:function(a){return this.pushStack(m.map(this,function(b,c){return a.call(b,c,b)}))},slice:function(){return this.pushStack(d.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(a){var b=this.length,c=+a+(0a?b:0);return this.pushStack(c=0&amp;&amp;bc?[this[c]]:[])},end:function(){return this.prevObject||this.constructor(null)},push:f,sort:c.sort,splice:c.splice},m.extend=m.fn.extend=function(){var a,b,c,d,e,f,g=arguments[0]||{},h=1,i=arguments.length,j=!1;for(&#34;boolean&#34;==typeof g&amp;&amp;(j=g,g=arguments[h]||{},h++),&#34;object&#34;==typeof g||m.isFunction(g)||(g={}),h===i&amp;&amp;(g=this,h--);ih;h++)if(null!=(e=arguments[h]))for(d in e)a=g[d],c=e[d],g!==c&amp;&amp;(j&amp;&amp;c&amp;&amp;(m.isPlainObject(c)||(b=m.isArray(c)))?(b?(b=!1,f=a&amp;&amp;m.isArray(a)?a:[]):f=a&amp;&amp;m.isPlainObject(a)?a:{},g[d]=m.extend(j,f,c)):void 0!==c&amp;&amp;(g[d]=c));return g},m.extend({expando:&#34;jQuery&#34;+(l+Math.random()).replace(/\D/g,&#34;&#34;),isReady:!0,error:function(a){throw new Error(a)},noop:function(){},isFunction:function(a){return&#34;function&#34;===m.type(a)},isArray:Array.isArray||function(a){return&#34;array&#34;===m.type(a)},isWindow:function(a){return null!=a&amp;&amp;a==a.window},isNumeric:function(a){return!m.isArray(a)&amp;&amp;a-parseFloat(a)+1=0},isEmptyObject:function(a){var b;for(b in a)return!1;return!0},isPlainObject:function(a){var b;if(!a||&#34;object&#34;!==m.type(a)||a.nodeType||m.isWindow(a))return!1;try{if(a.constructor&amp;&amp;!j.call(a,&#34;constructor&#34;)&amp;&amp;!j.call(a.constructor.prototype,&#34;isPrototypeOf&#34;))return!1}catch(c){return!1}if(k.ownLast)for(b in a)return j.call(a,b);for(b in a);return void 0===b||j.</description>
    </item>
    
  </channel>
</rss>