---
title: Formula One and Genetic Algorithms - Part 2
author: Ben Ewing
date: '2020-05-29'
slug: formula-one-and-genetic-algorithms-p-2
categories:
  - technical
tags:
  - r
  - f1
---

## Introduction

In the [previous post](https://improperprior.com/post/2020/05/20/formula-1-and-genetic-algorithms-p1/) I gave a brief overview of Formula 1 and Genetic Algorithms, in this post I will bring these topics together to show how we can simulate the car development process. The extension of the genetic algorithm to F1 is pretty natural. We can treat the performance of the car as the objective function. This function has many parameters, for example the speed of the car depends on many engine tuning parameters, and the cornering  ability will depend heavily on the aerodynamic qualities of the car. 

Assuming each team can explore a number of different design options, we can treat each team as a separate island of the genetic algorithm. Occasionally mixing islands allows for teams to copy parameters or maybe in some cases complete cars, see the infamous ['Tracing Point'](https://www.racefans.net/2020/02/28/racing-point-critics-were-naive-about-teams-potential/). Team budgets can be interpreted as a limit on the number of designs each team can explore, and the number of iterations of exploration each team gets, such that high budget teams can explore more of the space.

But first we need a suitable objective function.

## Designing an Objective Function


## Simulating Formula One Car Development

TODO:

- [ ] Use team colors: https://www.reddit.com/r/formula1/comments/arxt0r/f1_2019_team_colors_hex_codes/
- [ ] Use actual team budgets: https://www.racefans.net/2019/12/27/the-cost-of-f1-2019-team-budgets-analysed-part-one/ and https://www.racefans.net/2020/01/02/the-cost-of-f1-2019-part-two-what-the-top-teams-spent/
- [ ] Build a random way to define complicated functions with 1000s of parameters. Parameters should be all be integers that can take values between 0 and 100 so that the representation for each car can easily be represented as a binary string (allowing for easy mutation, mating, and so on)

## Adding Noise: Driver Quality

What if the objective function is noisy? Beyond the car, Formula 1 results also depend on environmental factors (some cars perform well in the heat) and crucially the driver. More experienced drivers are generally able to give better feedback about car performance, and thus better able to help a team develop a car. We can simulate this by adding noise to the objective function, with more experienced drivers providing their teams with less noise.

## The Effect of Budget Caps

As we can see in the previous sections, teams with higher budgets are usually able to produce much better cars. This has certainly been the case in Formula One, where the last race won by a team other than Ferrari, Red Bull, and Mercedes was in 2012. To address this issue, F1 has recently imposed a budget cap of \$150 million on each team much to the dislike of the bigger teams. This cap does not include certain members of team staff or the drivers. Will this help equalize the teams? We now have the tools to find out!

## The Effect of Open Source Parts

TODO: Same system, but with more sharing for certain parts.